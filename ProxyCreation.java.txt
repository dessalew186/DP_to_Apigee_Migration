import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Base64;

public class ApigeeProxyCreation {
     //Second Test
    // Replace these values with your Apigee Edge credentials
    private static final String APIGEE_USERNAME = "your_username";
    private static final String APIGEE_PASSWORD = "your_password";
    private static final String APIGEE_ORG = "your_org";
    private static final String APIGEE_ENV = "your_environment";

    // Replace with your Apigee Edge API endpoint
    private static final String APIGEE_API_ENDPOINT = "https://api.enterprise.apigee.com/v1/organizations/";

    public static void main(String[] args) {
        try {
            // Encode Apigee Edge credentials for Basic Authentication
            String auth = APIGEE_USERNAME + ":" + APIGEE_PASSWORD;
            String encodedAuth = Base64.getEncoder().encodeToString(auth.getBytes());

            // Specify the Apigee Edge API endpoint for proxy creation
            String apiEndpoint = APIGEE_API_ENDPOINT + APIGEE_ORG + "/apis";
            //test of GIT
            // Construct the API proxy creation request payload
            String proxyCreationRequest = "{\n" +
                    "  \"name\": \"SampleProxy\",\n" +
                    "  \"revision\": \"1\",\n" +
                    "  \"configuration\": {\n" +
                    "    \"basePath\": \"/v1\",\n" +
                    "    \"steps\": []\n" +
                    "  },\n" +
                    "  \"description\": \"Sample API Proxy\"\n" +
                    "}";

            // Send the HTTP request to create the API proxy
            sendHttpRequest(apiEndpoint, encodedAuth, proxyCreationRequest);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void sendHttpRequest(String apiEndpoint, String encodedAuth, String payload) throws IOException {
        URL url = new URL(apiEndpoint);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Authorization", "Basic " + encodedAuth);
        connection.setRequestProperty("Content-Type", "application/json");
        connection.setDoOutput(true);

        // Write the payload to the request body
        connection.getOutputStream().write(payload.getBytes());

        // Get the HTTP response code
        int responseCode = connection.getResponseCode();

        // Read and print the response
        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        String inputLine;
        StringBuilder response = new StringBuilder();

        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }

        in.close();

        System.out.println("HTTP Response Code: " + responseCode);
        System.out.println("Response Body: " + response.toString());
    }
}
